// Health monitoring and status checking functionality
//
// This module provides components for monitoring system health, including:
// - Health status definitions and management
// - Component health checking
// - Health check scheduling and reporting

use std::{
    collections::HashMap,
    sync::Arc,
    fmt::Debug,
};
use tokio::sync::RwLock;
use serde::{Serialize, Deserialize};
use crate::error::Result;
use async_trait::async_trait;

// Allow certain linting issues that are too numerous to fix individually
#[allow(clippy::missing_errors_doc)] // Temporarily allow missing error documentation
#[allow(clippy::unused_async)] // Allow unused async functions
// Define the submodules
/// Health status definitions and reporting
pub mod status;
/// Component health checking and management
pub mod component;
/// Health checker implementations and scheduling
pub mod checker;

// Re-export the types
pub use status::HealthStatus;
pub use component::ComponentHealth;
pub use checker::HealthChecker;

/// Health configuration
#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct HealthConfig {
    /// Enable health checks
    pub enabled: bool,
    /// Health check interval in seconds
    pub interval: u64,
}

impl Default for HealthConfig {
    fn default() -> Self {
        Self {
            enabled: true,
            interval: 60,
        }
    }
} 